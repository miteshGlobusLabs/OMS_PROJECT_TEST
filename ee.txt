

import React, { useState, useEffect } from "react";
import { Dropdown, DropdownButton } from "react-bootstrap";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
} from "@mui/material";
import AddCircleOutlineIcon from "@mui/icons-material/AddCircleOutline";

const Department = ({ sitem, assignedEmployees }) => {
  const [departments, setDepartments] = useState([]);
  const [selectedDepartment, setSelectedDepartment] = useState(null);
  const [departmentData, setDepartmentData] = useState(null);

  useEffect(() => {
    // Fetch departments when the component mounts
    fetchDepartments();
  }, []);

  const fetchDepartments = () => {
    fetch("http://localhost:3306/api/department")
      .then((response) => response.json())
      .then((data) => setDepartments(data))
      .catch((error) => console.error("Error fetching departments:", error));
  };

  const handleDepartmentSelect = (department) => {
    setSelectedDepartment(department);
    fetch(
      `http://localhost:3306/api/employee/dNames?department=${department.DepartmentName}`
    )
      .then((response) => response.json())
      .then((data) => {
        const filteredData = data.filter(
          (employee) => employee.DepartmentID === department.DepartmentID
        );
        setDepartmentData(filteredData);
      })
      .catch((error) =>
        console.error("Error fetching department data:", error)
      );
  };

  const handleAddToTeam = async (employeeID) => {
    // Handle adding an employee to the team
  };

  return (
    <div
      style={{
        display: "flex",
        justifyContent: "space-between",
        alignItems: "flex-start",
      }}
    >
      <div style={{ width: "30%" }}>
        <DropdownButton
          id="dropdown-basic-button"
          title={
            selectedDepartment
              ? selectedDepartment.DepartmentName
              : "Select Department"
          }
        >
          <div style={{ maxHeight: "300px", overflowY: "auto" }}>
            {departments.map((department) => (
              <Dropdown.Item
                key={department.DepartmentID}
                onClick={() => handleDepartmentSelect(department)}
              >
                {department.DepartmentName}
              </Dropdown.Item>
            ))}
          </div>
        </DropdownButton>
      </div>

      <div style={{ width: "700px" }}>
        <TableContainer component={Paper}>
          <Table sx={{ minWidth: 650 }} aria-label="simple table">
            <TableHead>
              <TableRow>
                <TableCell>Employee ID</TableCell>
                <TableCell>Name</TableCell>
                <TableCell>Designation</TableCell>
                <TableCell>Status</TableCell>
                <TableCell>Add</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {departmentData &&
                departmentData.map((employee) => (
                  <TableRow
                    key={employee.EmployeeID}
                    style={{
                      backgroundColor: assignedEmployees.some(
                        (item) => item.EmployeeID === employee.EmployeeID
                      )
                        ? "lightgray"
                        : "inherit",
                    }}
                  >
                    <TableCell>{employee.EmployeeID}</TableCell>
                    <TableCell>
                      {employee.FirstName} {employee.LastName}
                    </TableCell>
                    <TableCell>{employee.DesignationName}</TableCell>
                    <TableCell>{employee.EmploymentStatus}</TableCell>
                    <TableCell
                      sx={{
                        fontSize: "18px",
                        color: "green",
                        cursor: "pointer",
                      }}
                      onClick={() => handleAddToTeam(employee.EmployeeID)}
                      style={{
                        visibility: assignedEmployees.some(
                          (item) => item.EmployeeID === employee.EmployeeID
                        )
                          ? "hidden"
                          : "visible",
                      }}
                    >
                      <AddCircleOutlineIcon />
                    </TableCell>
                  </TableRow>
                ))}
            </TableBody>
          </Table>
        </TableContainer>
      </div>
    </div>
  );
};

export default Department;
